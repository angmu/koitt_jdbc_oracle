ora_user/1234
scott/tiger
system/orcl
sys/orcl
sid/orcl

포트
>>내부포트:1521 /
외부포트 8080

----------------------- 잊으면 안되는 아뒤비번

*별칭
>선택한 컬럼 뒤에 as를 넣고 별칭명, as넣고 "별칭명", 혹은 그냥 별칭만 써도 적용된다
//단, ""없이 쓰면 대소문자를 구분안하고 대문자로만 출력된다.

select employee_id as 사번,emp_name as "Name",salary Salary1,salary*12 from employees;

(출력된모양) 
사번	Name		SALARY1	SALARY*12
-------------------------------------------
198	Donald OConnell	2600	31200
199	Douglas Grant	2600	31200



==>실습
select *from employees; 하고 컬럼을 모두 한글로

>
select employee_id 사번,emp_name 사원,email "이메일",phone_number 전화번호,salary 일급,manager_id 매니저아이디,commission_pct 커미션포인트,retire_date 퇴사일,department_id 회사아이디,job_id 직함,create_date 생성일,update_date 업데이트일 from employees;

(출력된모양)
사번	사원		이메일		전화번호	일급	매니저아이디	커미션포인트	회사아이디	직함		생성일		업데이트일
-----------------------------------------------------------------------------------------------------------------------------------------------------------
198	Donald OConnell	DOCONNEL	650.507.9833	2600	124		0.25		50		SH_CLERK	14/01/08	14/01/08
199	Douglas Grant	DGRANT		650.507.9844	2600	124				50		SH_CLERK	14/01/08	14/01/08





-----------------------------

*중복 데이터값 제거 
(컬럼을 몇개로 나눴는지 확인가능 _등급,직급 종류를 확인할때 유용)

select DISTINCT 컬럼명 from 테이블명
>select DISTINCT department_id from employees;


==>실습 
매니저 아이디가 몇개인지 구하기
select DISTINCT  manager_id from employees; 




---------------------------------


*정렬 order by

>오름차순 asc
select DISTINCT department_id from employees ORDER BY  department_id asc;

>내림차순 desc
select * from employees ORDER BY department_id desc;

>>연달아 정렬가능 (이경우 먼저 정렬한것 기준 우선적용되며 동일값이 있을경우 순차정렬..)
select *from employees ORDER BY manager_id desc, salary asc;

(출력된 모양) manager_id를 기준으로 우선정렬, 이후 salary 기준 정렬되었다.
salary 	manager_id
---------------------
8600	149
8800	149
11000	149
6100	148
7300	148
7400	148


==>응용 : salary 가 5000이상인 사람 정렬
select * from employees where salary >=5000 order by salary desc;



==>실습 : 월급과 커미션을 더해서 8000이 넘는 사람 구하기 >> 43명 
//주의!!!!만약 nvl을 안쓰면 29명밖에 안나옴. 
select *from employees where salary+salary*nvl(commission_pct,0)>=8000 order by salary desc;

----------------------------------

*데이터개수 count
괄호안의 컬럼과 뒤의 조건을 보고 몇명이 부합하는지 값을 도출
select count(salary) from employees where salary != 10000;

(출력모양)
count(salary)
-------------
103

==>실습
1. 사번(employee_id) 200번인사람 출력
select *from employees where employee_id =200;

2. 사번(employee_id) 150번 이상인사람 출력
select *from employees where employee_id >=150;

3. 급여가 4000이하인 사원의 사원번호(employee_id), 사원이름(emp_name), 급여(salary)를 출력하는 sql문을 작성
(사원번호기준 오름차순으로 정렬)
select employee_id,emp_name,salary from employees where salary<=4000 order by employee_id asc;

4. 급여가 4000이상 8000이하 <<이경우에는 정렬을 급여기준으로 해주는게 좋다:>
select employee_id,emp_name,salary from employees where salary>=4000 and salary<=8000 order by salary asc;


응용==> 
1.급여가 5000이상 department_id가 50인 사람의 수
select count(*) from employees where salary>=5000 and department_id=50;

1.급여가 4000이상 department_id가 30인 사람의 수
select * from employees where salary>=4000 and department_id=30;

3.월급이 3000,4000,5000,6000,10000인 사람
select * from employees where salary=3000 or salary=4000 or salary=5000 or salary=6000 or salary=10000  order by employee_id;


4.사번이 104이거나 150이상
select * from employees where employee_id=104 or employee_id>=150 order by employee_id;
------------------------------------------------

*이름 검색 (대소문자를 구분한다..주의..)
SELECT * FROM employees where emp_name='Pat Fay';

++이름 일부검색 like ''
> like 'n%' n으로 시작하는것을 찾음 
SELECT * FROM employees where emp_name like 'P%';

> like '%n%' n이 들어간것을 찾음 (자바의 컨테인과 비슷)
SELECT * FROM employees where emp_name like '%P%';

> like '%n' n으로 끝나는것을 찾음
SELECT * FROM employees where emp_name like '%P';

> _는 자릿수
SELECT * FROM employees where emp_name like '_l%'; <<2번째가 l인것
SELECT * FROM employees where emp_name like '%_l'; <<끝에서 2째자리가 ㅣ인것

*날짜비교도 가능 'yy/mm/dd' 
SELECT * FROM employees where hire_date < '07/01/01' order by hire_date asc;


--------------------------------

*and의 대체사용문법 between

>between

-150<=x<=160 >>between ㅁ and ㅁ
select * from employees where employee_id between 150 and 160;

-150>=x x<=160 >> not between ㅁ and ㅁ
select * from employees where employee_id not between 150 and 160;
>>select * from employees where employee_id>=150 and employee_id<=160과 같음

날짜도 가능
SELECT * FROM employees where hire_date between '01/01/01' and '05/01/01' order by hire_date asc;

-------------------------------
*or의 대체사용쿼리 in()

select * from employees where salary=3000 or salary=4000 or salary=5000 or salary=6000 or salary=10000 order by employee_id;
>>간단하게 (in사용)
select * from employees where salary in(3000,4000,5000,6000,10000) order by employee_id;

==>응용
select * from employees where salary in(3000,4000,5000,6000,10000) and employee_id>=190 order by employee_id;

==>실습
부서가 30,40,50이면서 월급이 5000이상인 사람
select * from employees where  department_id in(30,40,50) and salary>=5000 order by employee_id;


-------------------------------
*null을 찾는 방법 (비교로 찾을수없음)
is null을 사용!!
select *from employees where commission_pct=null; 로 쓰면 안나온다. 

>>select *from employees where commission_pct is null;
